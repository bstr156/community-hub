(window.webpackJsonp=window.webpackJsonp||[]).push([[125],{693:function(e,t,a){"use strict";a.r(t);var s=a(2),o=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("It's important to note that there are various minor discrepancies between the behavior of Rollux and Syscoin NEVM or Ethereum.\nYou should be aware of these descrepancies when building apps on top of Rollux.")]),e._v(" "),t("h2",{attrs:{id:"opcode-differences"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#opcode-differences"}},[e._v("#")]),e._v(" Opcode Differences")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Opcode")]),e._v(" "),t("th",[e._v("Solidity equivalent")]),e._v(" "),t("th",[e._v("Behavior")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[t("code",[e._v("COINBASE")])]),e._v(" "),t("td",[t("code",[e._v("block.coinbase")])]),e._v(" "),t("td",[e._v("Undefined")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("DIFFICULTY")])]),e._v(" "),t("td",[t("code",[e._v("block.difficulty")])]),e._v(" "),t("td",[e._v("Random value. As this value is set by the sequencer, it is not as reliably random as the L1 equivalent. "),t("RouterLink",{attrs:{to:"/docs/useful-tools/oracles.html#verifiable-randomness-function-vrf"}},[e._v("You can use an oracle for randomness")]),e._v(".")],1)]),e._v(" "),t("tr",[t("td",[t("code",[e._v("NUMBER")])]),e._v(" "),t("td",[t("code",[e._v("block.number")])]),e._v(" "),t("td",[e._v("L2 block number")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("TIMESTAMP")])]),e._v(" "),t("td",[t("code",[e._v("block.timestamp")])]),e._v(" "),t("td",[e._v("Timestamp of the L2 block")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("ORIGIN")])]),e._v(" "),t("td",[t("code",[e._v("tx.origin")])]),e._v(" "),t("td",[e._v("If the transaction is an L1 ⇒ L2 transaction, then "),t("code",[e._v("tx.origin")]),e._v(" is set to the "),t("a",{attrs:{href:"#address-aliasing"}},[e._v("aliased address")]),e._v(" of the address that triggered the L1 ⇒ L2 transaction. Otherwise, this opcode behaves normally.")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("CALLER")])]),e._v(" "),t("td",[t("code",[e._v("msg.sender")])]),e._v(" "),t("td",[e._v("If the transaction is an L1 ⇒ L2 transaction, and this is the initial call (rather than an internal transaction from one contract to another), the same "),t("a",{attrs:{href:"#address-aliasing"}},[e._v("address aliasing")]),e._v(" behavior applies.")])])])]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("`tx.origin == msg.sender`")]),e._v(" "),t("p",[e._v("On L1 Ethereum "),t("code",[e._v("tx.origin")]),e._v(" is equal to "),t("code",[e._v("msg.sender")]),e._v(" only when the smart contract was called directly from an externally owned account (EOA).\nHowever, on Rollux "),t("code",[e._v("tx.origin")]),e._v(" is the origin "),t("em",[e._v("on Rollux")]),e._v(".\nIt could be an EOA.\nHowever, in the case of messages from L1, it is possible for a message from a smart contract on L1 to appear on L2 with "),t("code",[e._v("tx.origin == msg.origin")]),e._v(".\nThis is unlikely to make a significant difference, because an L1 smart contract cannot directly manipulate the L2 state.\nHowever, there could be edge cases we did not think about where this matters.")])]),e._v(" "),t("h3",{attrs:{id:"accessing-l1-information"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#accessing-l1-information"}},[e._v("#")]),e._v(" Accessing L1 information")]),e._v(" "),t("p",[e._v("If you need the equivalent information from the latest L1 block, you can get it from "),t("a",{attrs:{href:"https://github.com/SYS-Labs/rollux/blob/develop/packages/contracts-bedrock/contracts/L2/L1Block.sol",target:"_blank",rel:"noopener noreferrer"}},[e._v("the "),t("code",[e._v("L1Block")]),e._v(" contract"),t("OutboundLink")],1),e._v(".\nThis contract is a predeploy at address "),t("a",{attrs:{href:"https://rollux.tanenbaum.io/address/0x4200000000000000000000000000000000000015",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("0x4200000000000000000000000000000000000015")]),t("OutboundLink")],1),e._v(".\nYou can use "),t("a",{attrs:{href:"https://docs.soliditylang.org/en/v0.8.12/contracts.html#getter-functions",target:"_blank",rel:"noopener noreferrer"}},[e._v("the getter functions"),t("OutboundLink")],1),e._v(" to get these parameters:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("number")]),e._v(": The latest L1 block number known to L2")]),e._v(" "),t("li",[t("code",[e._v("timestamp")]),e._v(": The timestamp of the latest L1 block")]),e._v(" "),t("li",[t("code",[e._v("basefee")]),e._v(": The base fee of the latest L1 block")]),e._v(" "),t("li",[t("code",[e._v("hash")]),e._v(": The hash of the latest L1 block")]),e._v(" "),t("li",[t("code",[e._v("sequenceNumber")]),e._v(": The number of the L2 block within the epoch (the epoch changes when there is a new L1 block)")])]),e._v(" "),t("h3",{attrs:{id:"address-aliasing"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#address-aliasing"}},[e._v("#")]),e._v(" Address Aliasing")]),e._v(" "),t("p",[e._v("Because of the behavior of the "),t("code",[e._v("CREATE")]),e._v(" opcode, it is possible for a user to create a contract on L1 and on L2 that share the same address but have different bytecode.\nThis can break trust assumptions, because one contract may be trusted and another be untrusted (see below).\nTo prevent this problem the behavior of the "),t("code",[e._v("ORIGIN")]),e._v(" and "),t("code",[e._v("CALLER")]),e._v(" opcodes ("),t("code",[e._v("tx.origin")]),e._v(" and "),t("code",[e._v("msg.sender")]),e._v(") differs slightly between L1 and L2.")]),e._v(" "),t("p",[e._v("The value of "),t("code",[e._v("tx.origin")]),e._v(" is determined as follows:")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Call source")]),e._v(" "),t("th",[t("code",[e._v("tx.origin")])])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("L2 user (Externally Owned Account)")]),e._v(" "),t("td",[e._v("The user's address (same as in Ethereum or Syscoin)")])]),e._v(" "),t("tr",[t("td",[e._v("L1 user (Externally Owned Account)")]),e._v(" "),t("td",[e._v("The user's address (same as in Ethereum or Syscoin)")])]),e._v(" "),t("tr",[t("td",[e._v("L1 contract (using "),t("code",[e._v("CanonicalTransactionChain.enqueue")]),e._v(")")]),e._v(" "),t("td",[t("code",[e._v("L1_contract_address + 0x1111000000000000000000000000000000001111")])])])])]),e._v(" "),t("p",[e._v("The value of "),t("code",[e._v("msg.sender")]),e._v(" at the top-level (the very first contract being called) is always equal to "),t("code",[e._v("tx.origin")]),e._v(".\nTherefore, if the value of "),t("code",[e._v("tx.origin")]),e._v(" is affected by the rules defined above, the top-level value of "),t("code",[e._v("msg.sender")]),e._v(" will also be impacted.")]),e._v(" "),t("p",[e._v("Note that in general, "),t("a",{attrs:{href:"https://docs.soliditylang.org/en/latest/security-considerations.html#tx-origin",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("tx.origin")]),e._v(" should "),t("em",[e._v("not")]),e._v(" be used for authorization"),t("OutboundLink")],1),e._v(".\nHowever, that is a separate issue from address aliasing because address aliasing also affects "),t("code",[e._v("msg.sender")]),e._v(".")]),e._v(" "),t("h4",{attrs:{id:"why-is-address-aliasing-an-issue"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#why-is-address-aliasing-an-issue"}},[e._v("#")]),e._v(" Why is address aliasing an issue?")]),e._v(" "),t("p",[e._v("The problem with two identical source addresses (the L1 contract and the L2 contract) is that we extend trust based on the address.\nIt is possible that we will want to trust one of the contracts, but not the other.")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("Helena Hacker forks "),t("a",{attrs:{href:"https://uniswap.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Uniswap"),t("OutboundLink")],1),e._v(" to create her own exchange (on L2), called Hackswap.")]),e._v(" "),t("p",[t("strong",[e._v("Note:")]),e._v(" There are actually multiple contracts in Uniswap, so this explanation is a bit simplified.\n"),t("a",{attrs:{href:"https://ethereum.org/en/developers/tutorials/uniswap-v2-annotated-code/",target:"_blank",rel:"noopener noreferrer"}},[e._v("See here if you want additional details"),t("OutboundLink")],1),e._v(".")])]),e._v(" "),t("li",[t("p",[e._v("Helena Hacker provides Hackswap with liquidity that appears to allow for profitable arbitrage opportunities.\nFor example, she can make it so that you can spend 1 "),t("a",{attrs:{href:"https://www.coindesk.com/price/dai/",target:"_blank",rel:"noopener noreferrer"}},[e._v("DAI"),t("OutboundLink")],1),e._v("to buy 1.1 "),t("a",{attrs:{href:"https://www.coindesk.com/price/tether/",target:"_blank",rel:"noopener noreferrer"}},[e._v("USDT"),t("OutboundLink")],1),e._v(".\nBoth of those coins are supposed to be worth exactly $1.")])]),e._v(" "),t("li",[t("p",[e._v("Nimrod Naive knows that if something looks too good to be true it probably is.\nHowever, he checks the Hackswap contract's bytecode and verifies it is 100% identical to Uniswap.\nHe decides this means the contract can be trusted to behave exactly as Uniswap does.")])]),e._v(" "),t("li",[t("p",[e._v("Nimrod approves an allowance of 1000 DAI for the Hackswap contract.\nNimrod expects to call the swap function on Hackswap and receive back nearly 1100 USDT.")])]),e._v(" "),t("li",[t("p",[e._v("Before Nimrod's swap transaction is sent to the blockchain, Helena Hacker sends a transaction from an L1 contract with the same address as Hackswap.\nThis transaction transfers 1000 DAI from Nimrod's address to Helena Hacker's address.\nIf this transaction were to come from the same address as Hackswap on L2, it would be able to transfer the 1000 DAI because of the allowance Nimrod "),t("em",[e._v("had")]),e._v(" to give Hackswap in the previous step to swap tokens.")]),e._v(" "),t("p",[e._v("Nimrod, despite his naivete, is protected because Rollux modifies the transaction's "),t("code",[e._v("tx.origin")]),e._v(" (which is also the initial "),t("code",[e._v("msg.sender")]),e._v(").\nThat transaction comes from a "),t("em",[e._v("different")]),e._v(" address, one that does not have the allowance.")])])]),e._v(" "),t("p",[t("strong",[e._v("Note:")]),e._v(" It is simple to create two different contracts on the same address in different chains.\nBut it is nearly impossible to create two that are different by a specified amount, so Helena Hacker can't do that.")]),e._v(" "),t("h2",{attrs:{id:"blocks"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#blocks"}},[e._v("#")]),e._v(" Blocks")]),e._v(" "),t("p",[e._v("There are several differences in the way blocks are produced between Syscoin L1 and Rollux.")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Parameter")]),e._v(" "),t("th",[e._v("Syscoin L1")]),e._v(" "),t("th",[e._v("Rollux")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("Time between blocks (secs)")]),e._v(" "),t("td",[e._v("150 (1)")]),e._v(" "),t("td",[e._v("2")])]),e._v(" "),t("tr",[t("td",[e._v("Block target size (gas)")]),e._v(" "),t("td",[e._v("4,000,000")]),e._v(" "),t("td",[e._v("15,000,000")])]),e._v(" "),t("tr",[t("td",[e._v("Block maximum size (gas)")]),e._v(" "),t("td",[e._v("8,000,000")]),e._v(" "),t("td",[e._v("30,000,000")])])])]),e._v(" "),t("p",[e._v("(1) This is the average blocktime on Syscoin L1 (2.5 minutes)")]),e._v(" "),t("p",[e._v("The Rollux values are taken from "),t("a",{attrs:{href:"https://github.com/SYS-Labs/rollux/blob/develop/specs/guaranteed-gas-market.md#limiting-guaranteed-gas",target:"_blank",rel:"noopener noreferrer"}},[e._v("the Rollux specs"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("h2",{attrs:{id:"network-specifications"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#network-specifications"}},[e._v("#")]),e._v(" Network specifications")]),e._v(" "),t("h3",{attrs:{id:"json-rpc-differences"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#json-rpc-differences"}},[e._v("#")]),e._v(" JSON-RPC differences")]),e._v(" "),t("p",[e._v("Rollux uses the same "),t("a",{attrs:{href:"https://eth.wiki/json-rpc/API",target:"_blank",rel:"noopener noreferrer"}},[e._v("JSON-RPC API"),t("OutboundLink")],1),e._v(" as Ethereum.\nSome additional Rollux specific methods have been introduced.\nSee the full list of "),t("RouterLink",{attrs:{to:"/docs/developers/build/json-rpc.html"}},[e._v("custom JSON-RPC methods")]),e._v(" for more information.")],1),e._v(" "),t("h3",{attrs:{id:"pre-eip-155-support"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pre-eip-155-support"}},[e._v("#")]),e._v(" Pre-EIP-155 support")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://eips.ethereum.org/EIPS/eip-155",target:"_blank",rel:"noopener noreferrer"}},[e._v("Pre-EIP-155"),t("OutboundLink")],1),e._v(" transactions do not have a chain ID, which means a transaction on one Ethereum blockchain can be replayed on others.\nThis is a security risk. pre-EIP-155 transactions are not supported on Rollux.")]),e._v(" "),t("h2",{attrs:{id:"transaction-costs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#transaction-costs"}},[e._v("#")]),e._v(" Transaction costs")]),e._v(" "),t("p",[t("RouterLink",{attrs:{to:"/docs/developers/build/transaction-fees.html"}},[e._v("Transaction costs on Rollux")]),e._v(" include an "),t("RouterLink",{attrs:{to:"/docs/developers/build/transaction-fees.html#the-l2-execution-fee"}},[e._v("L2 execution fee")]),e._v(" and an "),t("RouterLink",{attrs:{to:"/docs/developers/build/transaction-fees.html#the-l1-data-fee"}},[e._v("L1 data fee")]),e._v(".")],1),e._v(" "),t("h2",{attrs:{id:"contract-addresses"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#contract-addresses"}},[e._v("#")]),e._v(" Contract addresses")]),e._v(" "),t("p",[e._v("The addresses in which various infrastructure contracts are installed are different between L1 Syscoin and Rollux.")])])}),[],!1,null,null,null);t.default=o.exports}}]);