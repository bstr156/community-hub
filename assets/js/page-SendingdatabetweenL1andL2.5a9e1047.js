(window.webpackJsonp=window.webpackJsonp||[]).push([[177],{689:function(t,e,s){"use strict";s.r(e);var n=s(2),a=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v('Apps on Rollux can be made to interact with apps on Syscoin via a process called "bridging".\nIn a nutshell, '),e("strong",[t._v("contracts on Rollux can trigger contract functions on Syscoin, and vice versa")]),t._v(".\nWith just a little bit of elbow grease, you too can create contracts that bridge the gap between Layer 1 and Layer 2!")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("Tips")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/sys-labs/rollux-tutorial/tree/main/cross-dom-comm",target:"_blank",rel:"noopener noreferrer"}},[t._v("See here for a step by step tutorial"),e("OutboundLink")],1)])]),t._v(" "),e("details",[e("summary",[e("b",[t._v("Understanding contract calls")])]),t._v(" "),e("p",[t._v("To understand the process of creating bridges between contracts on Layer 1 and Layer 2, you should first have a basic understanding of the way contracts on "),e("em",[t._v("Syscoin")]),t._v(" communicate with one another.  Syscoin NEVM works the same!\nIf you're a smart contract developer, you might be familiar with stuff like this:")]),t._v(" "),e("div",{staticClass:"language-solidity line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-solidity"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("contract")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyContract")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint256")]),t._v(" myFunctionParam"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... some sort of code goes here")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("contract")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyOtherContract")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("doTheThing")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" myContractAddress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint256")]),t._v(" myFunctionParam"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyContract")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myContractAddress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myFunctionParam"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("p",[t._v("Here, "),e("code",[t._v("MyOtherContract.doTheThing")]),t._v(' triggers a "call" to '),e("code",[t._v("MyContract.doSomething")]),t._v('.\nA "call" is defined by a few key input parameters, mainly a '),e("code",[t._v("target address")]),t._v(" and some "),e("code",[t._v("calldata")]),t._v(".\nIn this specific example, the "),e("code",[t._v("target address")]),t._v(" is going to be the address of our instance of "),e("code",[t._v("MyContract")]),t._v(".\nThe "),e("code",[t._v("calldata")]),t._v(", on the other hand, depends on the function we're trying to call.\nSolidity uses an encoding scheme called "),e("a",{attrs:{href:"https://docs.soliditylang.org/en/v0.8.4/abi-spec.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Contract ABI"),e("OutboundLink")],1),t._v(" to both "),e("a",{attrs:{href:"https://docs.soliditylang.org/en/v0.8.4/abi-spec.html#function-selector",target:"_blank",rel:"noopener noreferrer"}},[t._v("select which function to call"),e("OutboundLink")],1),t._v(" and to "),e("a",{attrs:{href:"https://docs.soliditylang.org/en/v0.8.4/abi-spec.html#argument-encoding",target:"_blank",rel:"noopener noreferrer"}},[t._v("encode function input arguments"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("p",[t._v("Solidity gives us some useful tools to perform this same encoding manually.\nFor the sake of learning, let's take a look at how we can duplicate the same code with a manual encoding:")]),t._v(" "),e("div",{staticClass:"language-solidity line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-solidity"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("contract")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyContract")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint256")]),t._v(" myFunctionParam"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... some sort of code goes here")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("contract")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyOtherContract")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("doTheThing")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" myContractAddress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint256")]),t._v(" myFunctionParam"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        myContractAddress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            abi"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodeWithSignature")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"doSomething(uint256)"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                myFunctionParam\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br")])]),e("p",[t._v("Here we're using the "),e("a",{attrs:{href:"https://docs.soliditylang.org/en/v0.8.4/units-and-global-variables.html#members-of-address-types",target:"_blank",rel:"noopener noreferrer"}},[t._v('low-level "call" function'),e("OutboundLink")],1),t._v(" and one of the "),e("a",{attrs:{href:"https://docs.soliditylang.org/en/v0.8.4/units-and-global-variables.html#abi-encoding-and-decoding-functions",target:"_blank",rel:"noopener noreferrer"}},[t._v("ABI encoding functions built into Solidity"),e("OutboundLink")],1),t._v(".\nAlthough these two code snippets look a bit different, they're actually functionally identical.")])]),t._v(" "),e("h2",{attrs:{id:"communication-basics-between-layers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#communication-basics-between-layers"}},[t._v("#")]),t._v(" Communication basics between layers")]),t._v(" "),e("p",[t._v("At a high level, this process is pretty similar to the same process for two contracts on Syscoin (with a few caveats).\n"),e("strong",[t._v('Communication between L1 and L2 is enabled by two special smart contracts called the "messengers"')]),t._v(".\nEach layer has its own messenger contract which serves to abstract away some lower-level communication details, a lot like how HTTP libraries abstract away physical network connections.")]),t._v(" "),e("p",[t._v("We won't get into "),e("em",[t._v("too")]),t._v(" much detail about these contracts here — the only thing you really need to know about is the "),e("code",[t._v("sendMessage")]),t._v(" function attached to each messenger:")]),t._v(" "),e("div",{staticClass:"language-solidity line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-solidity"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendMessage")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" _target"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("memory")]),t._v(" _message"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint32")]),t._v(" _gasLimit\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[t._v("It's the same as that "),e("code",[t._v("call")]),t._v(" function used for contract messaging within L1 Syscoin.\nWe have an extra "),e("code",[t._v("_gasLimit")]),t._v(" field here, but "),e("code",[t._v("call")]),t._v(" has that too.\nThis is basically equivalent to:")]),t._v(" "),e("div",{staticClass:"language-solidity line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-solidity"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_target"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("call"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("gas"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" _gasLimit"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_message"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("Except, of course, that we're calling a contract on a completely different network.")]),t._v(" "),e("p",[t._v("We're glossing over a lot of the technical details that make this whole thing work under the hood.\nPoint is, it works.\nWant to call a contract on Rollux from a contract on Syscoin?\nIt's dead simple:")]),t._v(" "),e("div",{staticClass:"language-solidity line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-solidity"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Pretend this is on L2")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("contract")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyRolluxContract")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint256")]),t._v(" myFunctionParam"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... some sort of code goes here")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// And pretend this is on L1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("contract")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyOtherContract")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("doTheThing")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" myRolluxContractAddress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint256")]),t._v(" myFunctionParam"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        ovmL1CrossDomainMessenger"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendMessage")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            myRolluxContractAddress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            abi"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodeWithSignature")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"doSomething(uint256)"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                myFunctionParam\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000000")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// use whatever gas limit you want")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br")])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("Using the messenger contracts")]),t._v(" "),e("p",[t._v("Our messenger contracts, the "),e("a",{attrs:{href:"https://github.com/sys-labs/rollux/blob/develop/packages/contracts/contracts/L1/messaging/L1CrossDomainMessenger.sol",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("L1CrossDomainMessenger")]),e("OutboundLink")],1),t._v(" and "),e("a",{attrs:{href:"https://github.com/sys-labs/rollux/blob/develop/packages/contracts/contracts/L2/messaging/L2CrossDomainMessenger.sol",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("L2CrossDomainMessenger")]),e("OutboundLink")],1),t._v(", always come pre-deployed to each of our networks.\nYou can find the exact addresses of these contracts on our various deployments "),e("a",{attrs:{href:"https://github.com/sys-labs/rollux/tree/develop/packages/contracts/deployments",target:"_blank",rel:"noopener noreferrer"}},[t._v("inside of the Rollux monorepo"),e("OutboundLink")],1),t._v(".")])]),t._v(" "),e("h2",{attrs:{id:"communication-speed"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#communication-speed"}},[t._v("#")]),t._v(" Communication speed")]),t._v(" "),e("p",[t._v("Unlike calls between contracts on the same blockchain, calls between Rollux and Syscoin are "),e("em",[t._v("not")]),t._v(" instantaneous.\nThe exact speed of a cross-chain transaction depends on the direction in which the transaction is sent.")]),t._v(" "),e("h3",{attrs:{id:"for-syscoin-l1-to-rollux-l2-transactions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#for-syscoin-l1-to-rollux-l2-transactions"}},[t._v("#")]),t._v(" For Syscoin (L1) to Rollux (L2) transactions")]),t._v(" "),e("p",[t._v("Transactions sent from L1 to L2 will typically take 2 to 8 minutes, but this time varies.\nThis is because L1 has an average blocktime of 2.5 minutes, but the timespan between individual blocks is subject to fluctuate.")]),t._v(" "),e("h3",{attrs:{id:"for-rollux-l2-to-syscoin-l1-transactions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#for-rollux-l2-to-syscoin-l1-transactions"}},[t._v("#")]),t._v(" For Rollux (L2) to Syscoin (L1) transactions")]),t._v(" "),e("p",[t._v("L2 to L1 transactions have to wait two periods:")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("The time until the state root is written to L1.\nIt is necessary to provide a Merkle proof of the message on L1 after the state root is written.\nThe fault challenge period starts "),e("em",[t._v("after")]),t._v(" that proof transaction becomes part of the L1 chain.")])]),t._v(" "),e("li",[e("p",[t._v("The "),e("a",{attrs:{href:"#understanding-the-challenge-period"}},[t._v("fault challenge period")]),t._v(', which is a few seconds on goerli and seven days on mainnet.\nThis waiting period is a core part of the security mechanism designed to keep funds on Rollux secure and cannot be circumvented.\nAfter this waiting period, any user can "finalize" the transaction by triggering a second transaction on Syscoin that sends the message to the target L1 contract.')])])]),t._v(" "),e("h2",{attrs:{id:"accessing-msg-sender"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#accessing-msg-sender"}},[t._v("#")]),t._v(" Accessing "),e("code",[t._v("msg.sender")])]),t._v(" "),e("p",[t._v("Contracts frequently make use of "),e("code",[t._v("msg.sender")]),t._v(" to make decisions based on the calling account.\nFor example, many contracts will use the "),e("a",{attrs:{href:"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ownable"),e("OutboundLink")],1),t._v(" pattern to selectively restrict access to certain functions.\nBecause messages are essentially shuttled between L1 and L2 by the messenger contracts, "),e("strong",[t._v("the "),e("code",[t._v("msg.sender")]),t._v(" you'll see when receiving one of these messages will be the messenger contract")]),t._v(" corresponding to the layer you're on.")]),t._v(" "),e("p",[t._v("In order to get around this, we added a "),e("code",[t._v("xDomainMessageSender")]),t._v(" function to each messenger:")]),t._v(" "),e("div",{staticClass:"language-solidity line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-solidity"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("xDomainMessageSender")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("returns")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("If your contract has been called by one of the messenger contracts, you can use this function to see who's "),e("em",[t._v("actually")]),t._v(" sending this message.\nHere's how you might implement an "),e("code",[t._v("onlyOwner")]),t._v(" modifier on L2:")]),t._v(" "),e("div",{staticClass:"language-solidity line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-solidity"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("modifier")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("onlyOwner")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        msg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sender "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ovmL2CrossDomainMessenger"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" ovmL2CrossDomainMessenger"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("xDomainMessageSender")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" owner\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("_")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("h2",{attrs:{id:"fees-for-sending-data-between-l1-and-l2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fees-for-sending-data-between-l1-and-l2"}},[t._v("#")]),t._v(" Fees for sending data between L1 and L2")]),t._v(" "),e("h3",{attrs:{id:"for-l1-⇒-l2-transactions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#for-l1-⇒-l2-transactions"}},[t._v("#")]),t._v(" For L1 ⇒ L2 transactions")]),t._v(" "),e("p",[t._v("The majority of the cost of an L1 to L2 transaction comes from sending a transaction on Syscoin.\nYou send a transaction to the "),e("a",{attrs:{href:"https://github.com/sys-labs/rollux/blob/develop/packages/contracts/contracts/L1/messaging/L1CrossDomainMessenger.sol",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("L1CrossDomainMessenger")]),e("OutboundLink")],1),t._v("\ncontract, which then sends a call to the "),e("a",{attrs:{href:"https://github.com/sys-labs/rollux/blob/develop/packages/contracts/contracts/L1/rollup/CanonicalTransactionChain.sol",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("CanonicalTransactionChain")]),e("OutboundLink")],1),t._v(".\nThis cost is ultimately determined by gas prices on Syscoin when you're sending the cross-chain transaction.")]),t._v(" "),e("p",[t._v("An L1 to L2 message is expected to trigger contract execution on L2, and that contract execution costs gas.\nThe first 1.92 million gas on L2 is free.\nThe vast majority of L1 to L2 calls spend less than the 1.92 million, so nothing further is required.")]),t._v(" "),e("p",[t._v("If you think that your call might spend more than that on L2, you can specify a higher gas limit.\nHowever, to prevent denial of service attacks, we have to impose a cost on gas limits higher than 1.92 million.\nThis cost is one unit of L1 gas for every 32 units of L2 gas requested beyond the free amount.")]),t._v(" "),e("p",[t._v("For example, if you specify a 2.0 million gas limit in the call to "),e("code",[t._v("L1CrossDomainMessenger")]),t._v(", it will be processed this way:")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Amount")]),t._v(" "),e("th",[t._v("Action")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("free gas: 1.92 million")]),t._v(" "),e("td",[t._v("Nothing, this gas is provided on L2 for free")])]),t._v(" "),e("tr",[e("td",[t._v("excess gas required: 80,000")]),t._v(" "),e("td",[t._v("2,500 gas is spent on the L1 portion of the gas fee and in return 80,000 extra gas is provided to the L2 transaction. This is inline with the 1:32 ratio of gas.")])])])]),t._v(" "),e("p",[t._v("This gas burn happens on L1 when the L1 contract calls "),e("code",[t._v("L1CrossDomainMessenger")]),t._v(".\nThis is before the message has been sent to the L2, and as such there is no way to know how much L2 gas will actually be used.\nTherefore, the amount burned is based "),e("em",[t._v("only")]),t._v(" on the gas limit specified in the L1 call.")]),t._v(" "),e("p",[t._v("For example, if the call above with a gas limit of two million only takes ten thousand gas on L2, the 2,500 gas on L1 is still burned.\nThere is no refund.")]),t._v(" "),e("p",[t._v("The parameters in the explanation above were 1.92 million and 32 at the time of writing, but they may change in the future.\nTo see the present values, "),e("a",{attrs:{href:"https://etherscan.io/address/0x5E4e65926BA27467555EB562121fac00D24E9dD2#readContract",target:"_blank",rel:"noopener noreferrer"}},[t._v("go to Etherscan"),e("OutboundLink")],1),t._v(" and expand "),e("code",[t._v("enqueueL2GasPrepaid")]),t._v(" for the free L2 gas amount and "),e("code",[t._v("l2GasDiscountDivisor")]),t._v(" for the exchange rate at which L1 gas is burned for additional L2 gas.")]),t._v(" "),e("h3",{attrs:{id:"fees-for-l2-⇒-l1-transactions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fees-for-l2-⇒-l1-transactions"}},[t._v("#")]),t._v(" Fees for L2 ⇒ L1 transactions")]),t._v(" "),e("p",[t._v("Each message from L2 to L1 requires three transactions:")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("An L2 transaction that "),e("em",[t._v("initiates")]),t._v(" the transaction, which is priced the same as any other transaction made on Rollux.")])]),t._v(" "),e("li",[e("p",[t._v("An L1 transaction that "),e("em",[t._v("proves")]),t._v(" the transaction.\nThis transaction can only be submitted after the state root is submitted to L1.\nThis transaction is expensive because it includes verifying a "),e("a",{attrs:{href:"https://eth.wiki/fundamentals/patricia-tree",target:"_blank",rel:"noopener noreferrer"}},[t._v("Merkle trie"),e("OutboundLink")],1),t._v(" inclusion proof.")])]),t._v(" "),e("li",[e("p",[t._v("An L1 transaction that "),e("em",[t._v("finalizes")]),t._v(" the transaction.\nThis transaction can only be submitted after the transaction challenge period (7 days on mainnet) has passed.")])])]),t._v(" "),e("p",[t._v("The total cost of an L2 to L1 transaction is therefore the combined cost of the L2 initialization transaction and the two L1 transactions.\nThe L1 proof and finalization transactions are typically significantly more expensive than the L2 initialization transaction.")]),t._v(" "),e("h2",{attrs:{id:"understanding-the-challenge-period"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#understanding-the-challenge-period"}},[t._v("#")]),t._v(" Understanding the challenge period")]),t._v(" "),e("p",[t._v("One of the most important things to understand about L1 ⇔ L2 interaction is that "),e("strong",[t._v("messages sent from Layer 2 to Layer 1 cannot be relayed for at least one week")]),t._v('.\nThis means that any messages you send from Layer 2 will only be received on Layer 1 after this one week period has elapsed.\nWe call this period of time the "challenge period" because it is the time during which a transaction can be challenged with a '),e("RouterLink",{attrs:{to:"/docs/protocol/2-rollup-protocol.html#fault-proofs"}},[t._v("fault proof")]),t._v(".")],1),t._v(" "),e("p",[t._v('Optimistic Rollups are "optimistic" because they\'re based around the idea of publishing the '),e("em",[t._v("result")]),t._v(' of a transaction to Syscoin without actually executing the transaction on Syscoin.\nIn the "optimistic" case, this transaction result is correct and we can completely avoid the need to perform complicated (and expensive) logic on Syscoin.\nCheap transactions, yay!')]),t._v(" "),e("p",[t._v('However, we still need some way to prevent incorrect transaction results from being published in place of correct ones.\nHere\'s where the "fault proof" comes into play.\nWhenever a transaction result is published, it\'s considered "pending" for a period of time known as the challenge period.\nDuring this period of time, anyone may re-execute the transaction '),e("em",[t._v("on Syscoin")]),t._v(" in an attempt to demonstrate that the published result was incorrect.")]),t._v(" "),e("p",[t._v("If someone is able prove that a transaction result is faulty, then the result is scrubbed from existence and anyone can publish another result in its place (hopefully the correct one this time, financial punishments make faulty results "),e("em",[t._v("very")]),t._v(" costly for their publishers).\nOnce the window for a given transaction result has fully passed without a challenge the result can be considered fully valid (or else someone would've challenged it).")]),t._v(" "),e("p",[t._v("Anyway, the point here is that "),e("strong",[t._v("you don't want to be making decisions about Layer 2 transaction results from inside a smart contract on Layer 1 until this challenge period has elapsed")]),t._v(".\nOtherwise you might be making decisions based on an invalid transaction result.\nAs a result, L2 ⇒ L1 messages sent using the standard messenger contracts cannot be relayed until they've waited out the full challenge period.")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("On the length of the challenge period")]),t._v(" "),e("p",[t._v("We've set the challenge period to be exactly seven days on the Rollux mainnet.\nWe believe this is a reasonable balance between security and usability, with an emphasis on increased security to start.\nWe're open to changing the length of the window as long as we feel this can be done without significantly reducing the security of the system.\nIf you're strongly opinionated about this, we recommend "),e("a",{attrs:{href:"https://github.com/sys-labs/rollux/issues",target:"_blank",rel:"noopener noreferrer"}},[t._v("opening an issue on GitHub"),e("OutboundLink")],1),t._v(" explaining your position.\nWe "),e("em",[t._v("will")]),t._v(" hear you out!")])])])}),[],!1,null,null,null);e.default=a.exports},781:function(t,e,s){"use strict";s.r(e);var n=s(2),a=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v('Apps on Optimism can be made to interact with apps on Ethereum via a process called "bridging".\nIn a nutshell, '),e("strong",[t._v("contracts on Optimism can trigger contract functions on Ethereum, and vice versa")]),t._v(".\nWith just a little bit of elbow grease, you too can create contracts that bridge the gap between Layer 1 and Layer 2!")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("Tips")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-comm",target:"_blank",rel:"noopener noreferrer"}},[t._v("See here for a step by step tutorial"),e("OutboundLink")],1)])]),t._v(" "),e("details",[e("summary",[e("b",[t._v("Understanding contract calls")])]),t._v(" "),e("p",[t._v("To understand the process of creating bridges between contracts on Layer 1 and Layer 2, you should first have a basic understanding of the way contracts on "),e("em",[t._v("Ethereum")]),t._v(" communicate with one another.\nIf you're a smart contract developer, you might be familiar with stuff like this:")]),t._v(" "),e("div",{staticClass:"language-solidity line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-solidity"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("contract")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyContract")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint256")]),t._v(" myFunctionParam"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... some sort of code goes here")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("contract")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyOtherContract")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("doTheThing")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" myContractAddress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint256")]),t._v(" myFunctionParam"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyContract")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myContractAddress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myFunctionParam"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("p",[t._v("Here, "),e("code",[t._v("MyOtherContract.doTheThing")]),t._v(' triggers a "call" to '),e("code",[t._v("MyContract.doSomething")]),t._v('.\nA "call" is defined by a few key input parameters, mainly a '),e("code",[t._v("target address")]),t._v(" and some "),e("code",[t._v("calldata")]),t._v(".\nIn this specific example, the "),e("code",[t._v("target address")]),t._v(" is going to be the address of our instance of "),e("code",[t._v("MyContract")]),t._v(".\nThe "),e("code",[t._v("calldata")]),t._v(", on the other hand, depends on the function we're trying to call.\nSolidity uses an encoding scheme called "),e("a",{attrs:{href:"https://docs.soliditylang.org/en/v0.8.4/abi-spec.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Contract ABI"),e("OutboundLink")],1),t._v(" to both "),e("a",{attrs:{href:"https://docs.soliditylang.org/en/v0.8.4/abi-spec.html#function-selector",target:"_blank",rel:"noopener noreferrer"}},[t._v("select which function to call"),e("OutboundLink")],1),t._v(" and to "),e("a",{attrs:{href:"https://docs.soliditylang.org/en/v0.8.4/abi-spec.html#argument-encoding",target:"_blank",rel:"noopener noreferrer"}},[t._v("encode function input arguments"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("p",[t._v("Solidity gives us some useful tools to perform this same encoding manually.\nFor the sake of learning, let's take a look at how we can duplicate the same code with a manual encoding:")]),t._v(" "),e("div",{staticClass:"language-solidity line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-solidity"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("contract")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyContract")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint256")]),t._v(" myFunctionParam"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... some sort of code goes here")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("contract")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyOtherContract")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("doTheThing")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" myContractAddress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint256")]),t._v(" myFunctionParam"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        myContractAddress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            abi"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodeWithSignature")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"doSomething(uint256)"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                myFunctionParam\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br")])]),e("p",[t._v("Here we're using the "),e("a",{attrs:{href:"https://docs.soliditylang.org/en/v0.8.4/units-and-global-variables.html#members-of-address-types",target:"_blank",rel:"noopener noreferrer"}},[t._v('low-level "call" function'),e("OutboundLink")],1),t._v(" and one of the "),e("a",{attrs:{href:"https://docs.soliditylang.org/en/v0.8.4/units-and-global-variables.html#abi-encoding-and-decoding-functions",target:"_blank",rel:"noopener noreferrer"}},[t._v("ABI encoding functions built into Solidity"),e("OutboundLink")],1),t._v(".\nAlthough these two code snippets look a bit different, they're actually functionally identical.")])]),t._v(" "),e("h2",{attrs:{id:"communication-basics-between-layers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#communication-basics-between-layers"}},[t._v("#")]),t._v(" Communication basics between layers")]),t._v(" "),e("p",[t._v("At a high level, this process is pretty similar to the same process for two contracts on Ethereum (with a few caveats).\n"),e("strong",[t._v('Communication between L1 and L2 is enabled by two special smart contracts called the "messengers"')]),t._v(".\nEach layer has its own messenger contract which serves to abstract away some lower-level communication details, a lot like how HTTP libraries abstract away physical network connections.")]),t._v(" "),e("p",[t._v("We won't get into "),e("em",[t._v("too")]),t._v(" much detail about these contracts here — the only thing you really need to know about is the "),e("code",[t._v("sendMessage")]),t._v(" function attached to each messenger:")]),t._v(" "),e("div",{staticClass:"language-solidity line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-solidity"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendMessage")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" _target"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("memory")]),t._v(" _message"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint32")]),t._v(" _gasLimit\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[t._v("It's the same as that "),e("code",[t._v("call")]),t._v(" function used for contract messaging within L1 Ethereums.\nWe have an extra "),e("code",[t._v("_gasLimit")]),t._v(" field here, but "),e("code",[t._v("call")]),t._v(" has that too.\nThis is basically equivalent to:")]),t._v(" "),e("div",{staticClass:"language-solidity line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-solidity"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_target"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("call"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("gas"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" _gasLimit"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_message"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("Except, of course, that we're calling a contract on a completely different network.")]),t._v(" "),e("p",[t._v("We're glossing over a lot of the technical details that make this whole thing work under the hood.\nPoint is, it works.\nWant to call a contract on Optimism from a contract on Ethereum?\nIt's dead simple:")]),t._v(" "),e("div",{staticClass:"language-solidity line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-solidity"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Pretend this is on L2")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("contract")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyOptimisticContract")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint256")]),t._v(" myFunctionParam"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... some sort of code goes here")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// And pretend this is on L1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("contract")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyOtherContract")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("doTheThing")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" myOptimisticContractAddress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint256")]),t._v(" myFunctionParam"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        ovmL1CrossDomainMessenger"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendMessage")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            myOptimisticContractAddress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            abi"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodeWithSignature")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"doSomething(uint256)"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                myFunctionParam\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000000")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// use whatever gas limit you want")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br")])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("Using the messenger contracts")]),t._v(" "),e("p",[t._v("Our messenger contracts, the "),e("a",{attrs:{href:"https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/L1/messaging/L1CrossDomainMessenger.sol",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("L1CrossDomainMessenger")]),e("OutboundLink")],1),t._v(" and "),e("a",{attrs:{href:"https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/L2/messaging/L2CrossDomainMessenger.sol",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("L2CrossDomainMessenger")]),e("OutboundLink")],1),t._v(", always come pre-deployed to each of our networks.\nYou can find the exact addresses of these contracts on our various deployments "),e("a",{attrs:{href:"https://github.com/ethereum-optimism/optimism/tree/develop/packages/contracts/deployments",target:"_blank",rel:"noopener noreferrer"}},[t._v("inside of the Optimism monorepo"),e("OutboundLink")],1),t._v(".")])]),t._v(" "),e("h2",{attrs:{id:"communication-speed"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#communication-speed"}},[t._v("#")]),t._v(" Communication speed")]),t._v(" "),e("p",[t._v("Unlike calls between contracts on the same blockchain, calls between Ethereum and Optimism are "),e("em",[t._v("not")]),t._v(" instantaneous.\nThe exact speed of a cross-chain transaction depends on the direction in which the transaction is sent.")]),t._v(" "),e("h3",{attrs:{id:"for-ethereum-l1-to-optimism-l2-transactions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#for-ethereum-l1-to-optimism-l2-transactions"}},[t._v("#")]),t._v(" For Ethereum (L1) to Optimism (L2) transactions")]),t._v(" "),e("p",[t._v("Transactions sent from L1 to L2 take up to approximately 15 minutes on mainnet and 5 minutes on the Optimism Goerli testnet to reach the target L2 contract.\nThis is because L2 nodes will wait for a certain number of block confirmations on Ethereum before executing an L1 to L2 transaction.")]),t._v(" "),e("h3",{attrs:{id:"for-optimism-l2-to-ethereum-l1-transactions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#for-optimism-l2-to-ethereum-l1-transactions"}},[t._v("#")]),t._v(" For Optimism (L2) to Ethereum (L1) transactions")]),t._v(" "),e("p",[t._v("L2 to L1 transactions have to wait two periods:")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("The time until the state root is written to L1.\nYou can estimate this time by looking at how often transactions happen to the State Commitment Chain (on both "),e("a",{attrs:{href:"https://etherscan.io/address/0xBe5dAb4A2e9cd0F27300dB4aB94BeE3A233AEB19",target:"_blank",rel:"noopener noreferrer"}},[t._v("mainnet"),e("OutboundLink")],1),t._v(" and "),e("a",{attrs:{href:"https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0",target:"_blank",rel:"noopener noreferrer"}},[t._v("goerli"),e("OutboundLink")],1),t._v(").")]),t._v(" "),e("p",[t._v("As of the Bedrock update, it is necessary to provide a Merkle proof of the message on L1 after the state root is written.\nThe fault challenge period starts "),e("em",[t._v("after")]),t._v(" that proof transaction becomes part of the L1 chain.")])]),t._v(" "),e("li",[e("p",[t._v("The "),e("a",{attrs:{href:"#understanding-the-challenge-period"}},[t._v("fault challenge period")]),t._v(', which is a few seconds on goerli and seven days on mainnet.\nThis waiting period is a core part of the security mechanism designed to keep funds on Optimism secure and cannot be circumvented.\nAfter this waiting period, any user can "finalize" the transaction by triggering a second transaction on Ethereum that sends the message to the target L1 contract.')])])]),t._v(" "),e("h2",{attrs:{id:"accessing-msg-sender"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#accessing-msg-sender"}},[t._v("#")]),t._v(" Accessing "),e("code",[t._v("msg.sender")])]),t._v(" "),e("p",[t._v("Contracts frequently make use of "),e("code",[t._v("msg.sender")]),t._v(" to make decisions based on the calling account.\nFor example, many contracts will use the "),e("a",{attrs:{href:"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ownable"),e("OutboundLink")],1),t._v(" pattern to selectively restrict access to certain functions.\nBecause messages are essentially shuttled between L1 and L2 by the messenger contracts, "),e("strong",[t._v("the "),e("code",[t._v("msg.sender")]),t._v(" you'll see when receiving one of these messages will be the messenger contract")]),t._v(" corresponding to the layer you're on.")]),t._v(" "),e("p",[t._v("In order to get around this, we added a "),e("code",[t._v("xDomainMessageSender")]),t._v(" function to each messenger:")]),t._v(" "),e("div",{staticClass:"language-solidity line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-solidity"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("xDomainMessageSender")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("returns")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("If your contract has been called by one of the messenger contracts, you can use this function to see who's "),e("em",[t._v("actually")]),t._v(" sending this message.\nHere's how you might implement an "),e("code",[t._v("onlyOwner")]),t._v(" modifier on L2:")]),t._v(" "),e("div",{staticClass:"language-solidity line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-solidity"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("modifier")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("onlyOwner")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        msg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sender "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ovmL2CrossDomainMessenger"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" ovmL2CrossDomainMessenger"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("xDomainMessageSender")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" owner\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("_")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("h2",{attrs:{id:"fees-for-sending-data-between-l1-and-l2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fees-for-sending-data-between-l1-and-l2"}},[t._v("#")]),t._v(" Fees for sending data between L1 and L2")]),t._v(" "),e("h3",{attrs:{id:"for-l1-⇒-l2-transactions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#for-l1-⇒-l2-transactions"}},[t._v("#")]),t._v(" For L1 ⇒ L2 transactions")]),t._v(" "),e("p",[t._v("The majority of the cost of an L1 to L2 transaction comes from sending a transaction on Ethereum.\nYou send a transaction to the "),e("a",{attrs:{href:"https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/L1/messaging/L1CrossDomainMessenger.sol",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("L1CrossDomainMessenger")]),e("OutboundLink")],1),t._v("\ncontract, which then sends a call to the "),e("a",{attrs:{href:"https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/L1/rollup/CanonicalTransactionChain.sol",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("CanonicalTransactionChain")]),e("OutboundLink")],1),t._v(".\nThis cost is ultimately determined by gas prices on Ethereum when you're sending the cross-chain transaction.")]),t._v(" "),e("p",[t._v("An L1 to L2 message is expected to trigger contract execution on L2, and that contract execution costs gas.\nThe first 1.92 million gas on L2 is free.\nThe vast majority of L1 to L2 calls spend less than the 1.92 million, so nothing further is required.")]),t._v(" "),e("p",[t._v("If you think that your call might spend more than that on L2, you can specify a higher gas limit.\nHowever, to prevent denial of service attacks, we have to impose a cost on gas limits higher than 1.92 million.\nThis cost is one unit of L1 gas for every 32 units of L2 gas requested beyond the free amount.")]),t._v(" "),e("p",[t._v("For example, if you specify a 2.0 million gas limit in the call to "),e("code",[t._v("L1CrossDomainMessenger")]),t._v(", it will be processed this way:")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Amount")]),t._v(" "),e("th",[t._v("Action")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("free gas: 1.92 million")]),t._v(" "),e("td",[t._v("Nothing, this gas is provided on L2 for free")])]),t._v(" "),e("tr",[e("td",[t._v("excess gas required: 80,000")]),t._v(" "),e("td",[t._v("2,500 gas is spent on the L1 portion of the gas fee and in return 80,000 extra gas is provided to the L2 transaction. This is inline with the 1:32 ratio of gas.")])])])]),t._v(" "),e("p",[t._v("This gas burn happens on L1 when the L1 contract calls "),e("code",[t._v("L1CrossDomainMessenger")]),t._v(".\nThis is before the message has been sent to the L2, and as such there is no way to know how much L2 gas will actually be used.\nTherefore, the amount burned is based "),e("em",[t._v("only")]),t._v(" on the gas limit specified in the L1 call.")]),t._v(" "),e("p",[t._v("For example, if the call above with a gas limit of two million only takes ten thousand gas on L2, the 2,500 gas on L1 is still burned.\nThere is no refund.")]),t._v(" "),e("p",[t._v("The parameters in the explanation above were 1.92 million and 32 at the time of writing, but they may change in the future.\nTo see the present values, "),e("a",{attrs:{href:"https://etherscan.io/address/0x5E4e65926BA27467555EB562121fac00D24E9dD2#readContract",target:"_blank",rel:"noopener noreferrer"}},[t._v("go to Etherscan"),e("OutboundLink")],1),t._v(" and expand "),e("code",[t._v("enqueueL2GasPrepaid")]),t._v(" for the free L2 gas amount and "),e("code",[t._v("l2GasDiscountDivisor")]),t._v(" for the exchange rate at which L1 gas is burned for additional L2 gas.")]),t._v(" "),e("h3",{attrs:{id:"fees-for-l2-⇒-l1-transactions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fees-for-l2-⇒-l1-transactions"}},[t._v("#")]),t._v(" Fees for L2 ⇒ L1 transactions")]),t._v(" "),e("p",[t._v("Each message from L2 to L1 requires three transactions:")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("An L2 transaction that "),e("em",[t._v("initiates")]),t._v(" the transaction, which is priced the same as any other transaction made on Optimism.")])]),t._v(" "),e("li",[e("p",[t._v("An L1 transaction that "),e("em",[t._v("proves")]),t._v(" the transaction.\nThis transaction can only be submitted after the state root is submitted to L1.\nThis transaction is expensive because it includes verifying a "),e("a",{attrs:{href:"https://eth.wiki/fundamentals/patricia-tree",target:"_blank",rel:"noopener noreferrer"}},[t._v("Merkle trie"),e("OutboundLink")],1),t._v(" inclusion proof.")])]),t._v(" "),e("li",[e("p",[t._v("An L1 transaction that "),e("em",[t._v("finalizes")]),t._v(" the transaction.\nThis transaction can only be submitted after the transaction challenge period (7 days on mainnet) has passed.")])])]),t._v(" "),e("p",[t._v("The total cost of an L2 to L1 transaction is therefore the combined cost of the L2 initialization transaction and the two L1 transactions.\nThe L1 proof and finalization transactions are typically significantly more expensive than the L2 initialization transaction.")]),t._v(" "),e("h2",{attrs:{id:"understanding-the-challenge-period"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#understanding-the-challenge-period"}},[t._v("#")]),t._v(" Understanding the challenge period")]),t._v(" "),e("p",[t._v("One of the most important things to understand about L1 ⇔ L2 interaction is that "),e("strong",[t._v("messages sent from Layer 2 to Layer 1 cannot be relayed for at least one week")]),t._v('.\nThis means that any messages you send from Layer 2 will only be received on Layer 1 after this one week period has elapsed.\nWe call this period of time the "challenge period" because it is the time during which a transaction can be challenged with a '),e("RouterLink",{attrs:{to:"/docs/protocol/2-rollup-protocol.html#fault-proofs"}},[t._v("fault proof")]),t._v(".")],1),t._v(" "),e("p",[t._v('Optimistic Rollups are "optimistic" because they\'re based around the idea of publishing the '),e("em",[t._v("result")]),t._v(' of a transaction to Ethereum without actually executing the transaction on Ethereum.\nIn the "optimistic" case, this transaction result is correct and we can completely avoid the need to perform complicated (and expensive) logic on Ethereum.\nCheap transactions, yay!')]),t._v(" "),e("p",[t._v('However, we still need some way to prevent incorrect transaction results from being published in place of correct ones.\nHere\'s where the "fault proof" comes into play.\nWhenever a transaction result is published, it\'s considered "pending" for a period of time known as the challenge period.\nDuring this period of time, anyone may re-execute the transaction '),e("em",[t._v("on Ethereum")]),t._v(" in an attempt to demonstrate that the published result was incorrect.")]),t._v(" "),e("p",[t._v("If someone is able prove that a transaction result is faulty, then the result is scrubbed from existence and anyone can publish another result in its place (hopefully the correct one this time, financial punishments make faulty results "),e("em",[t._v("very")]),t._v(" costly for their publishers).\nOnce the window for a given transaction result has fully passed without a challenge the result can be considered fully valid (or else someone would've challenged it).")]),t._v(" "),e("p",[t._v("Anyway, the point here is that "),e("strong",[t._v("you don't want to be making decisions about Layer 2 transaction results from inside a smart contract on Layer 1 until this challenge period has elapsed")]),t._v(".\nOtherwise you might be making decisions based on an invalid transaction result.\nAs a result, L2 ⇒ L1 messages sent using the standard messenger contracts cannot be relayed until they've waited out the full challenge period.")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("On the length of the challenge period")]),t._v(" "),e("p",[t._v("We've set the challenge period to be exactly seven days on the Optimism mainnet.\nWe believe this is a reasonable balance between security and usability, with an emphasis on increased security to start.\nWe're open to changing the length of the window as long as we feel this can be done without significantly reducing the security of the system.\nIf you're strongly opinionated about this, we recommend "),e("a",{attrs:{href:"https://github.com/ethereum-optimism/optimism/issues",target:"_blank",rel:"noopener noreferrer"}},[t._v("opening an issue on GitHub"),e("OutboundLink")],1),t._v(" explaining your position.\nWe "),e("em",[t._v("will")]),t._v(" hear you out!")])])])}),[],!1,null,null,null);e.default=a.exports}}]);